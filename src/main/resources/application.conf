my-pinned-dispatcher {
    executor = "thread-pool-executor"
    type = PinnedDispatcher
}

my-threadpool-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        core-pool-size-min = 2
        core-pool-size-factor = 3.0
        core-pool-size-max = 15
    }
    throughput = 1
}

my-forkjoin-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 3
        parallelism-factor = 3.0
        parallelism-max = 15
    }
    throughput = 1
}


msgprio-mailbox {
    mailbox-type = "com.akkastudy.part2.MsgPriorityMailBox"
}

control-aware-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
}

business-mailbox {
    mailbox-type = "com.akkastudy.part2.BusinessMailBoxType"
}

akka.actor.deployment {
    /masterRouterActor/taskActor {
        router = round-robin-pool
        nr-of-instances = 3
    }
    /masterActor/router {
        router = round-robin-group
        routees.paths = ["/user/masterActor/wt1", "/user/masterActor/wt2", "/user/masterActor/wt3"]
    }
    /masterBroadActor/broadRouter {
        router = broadcast-group
        routees.paths = ["/user/masterBroadActor/bw1", "/user/masterBroadActor/bw2"]
    }
    /masterFirstActor/firstCompRouter {
        router = scatter-gather-group
        routees.paths = ["/user/masterFirstActor/fw1", "/user/masterFirstActor/fw2"]
        within = 3 seconds
    }
}

; akka.loggers = ["com.akkastudy.part3.LogListener"]
akka.loggers = ["akka.event.slf4j.Slf4jLogger"]

akkademo {
    server = serverdemo.io
    port = 1234
}

akka {
    actor {
        provider = "akka.remote.RemoteActorRefProvider"
    }

    remote {
        enabled-transports = ["akka.remote.netty.tcp"]
        netty.tcp {
            hostname = "127.0.0.1"
            port = 2552
        }
    }
}
